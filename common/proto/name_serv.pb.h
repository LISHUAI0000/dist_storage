// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: name_serv.proto

#ifndef PROTOBUF_name_5fserv_2eproto__INCLUDED
#define PROTOBUF_name_5fserv_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace dist_storage {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_name_5fserv_2eproto();
void protobuf_AssignDesc_name_5fserv_2eproto();
void protobuf_ShutdownFile_name_5fserv_2eproto();

class HBRequest;
class HBResponse;
class Bucket;
class CNSRequest;
class CNSResponse;

enum NSCode {
  NS_SUC = 0,
  NS_ERR = 1
};
bool NSCode_IsValid(int value);
const NSCode NSCode_MIN = NS_SUC;
const NSCode NSCode_MAX = NS_ERR;
const int NSCode_ARRAYSIZE = NSCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* NSCode_descriptor();
inline const ::std::string& NSCode_Name(NSCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    NSCode_descriptor(), value);
}
inline bool NSCode_Parse(
    const ::std::string& name, NSCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<NSCode>(
    NSCode_descriptor(), name, value);
}
enum NodeAction {
  Reg = 0,
  UnReg = 1,
  Beat = 2,
  NUL = 3
};
bool NodeAction_IsValid(int value);
const NodeAction NodeAction_MIN = Reg;
const NodeAction NodeAction_MAX = NUL;
const int NodeAction_ARRAYSIZE = NodeAction_MAX + 1;

const ::google::protobuf::EnumDescriptor* NodeAction_descriptor();
inline const ::std::string& NodeAction_Name(NodeAction value) {
  return ::google::protobuf::internal::NameOfEnum(
    NodeAction_descriptor(), value);
}
inline bool NodeAction_Parse(
    const ::std::string& name, NodeAction* value) {
  return ::google::protobuf::internal::ParseNamedEnum<NodeAction>(
    NodeAction_descriptor(), name, value);
}
// ===================================================================

class HBRequest : public ::google::protobuf::Message {
 public:
  HBRequest();
  virtual ~HBRequest();

  HBRequest(const HBRequest& from);

  inline HBRequest& operator=(const HBRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HBRequest& default_instance();

  void Swap(HBRequest* other);

  // implements Message ----------------------------------------------

  HBRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HBRequest& from);
  void MergeFrom(const HBRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string host = 1 [default = ""];
  inline bool has_host() const;
  inline void clear_host();
  static const int kHostFieldNumber = 1;
  inline const ::std::string& host() const;
  inline void set_host(const ::std::string& value);
  inline void set_host(const char* value);
  inline void set_host(const char* value, size_t size);
  inline ::std::string* mutable_host();
  inline ::std::string* release_host();
  inline void set_allocated_host(::std::string* host);

  // optional .dist_storage.NodeAction action = 2 [default = NUL];
  inline bool has_action() const;
  inline void clear_action();
  static const int kActionFieldNumber = 2;
  inline ::dist_storage::NodeAction action() const;
  inline void set_action(::dist_storage::NodeAction value);

  // optional int64 updated_time = 3 [default = 0];
  inline bool has_updated_time() const;
  inline void clear_updated_time();
  static const int kUpdatedTimeFieldNumber = 3;
  inline ::google::protobuf::int64 updated_time() const;
  inline void set_updated_time(::google::protobuf::int64 value);

  // optional int64 disk_space = 4 [default = 0];
  inline bool has_disk_space() const;
  inline void clear_disk_space();
  static const int kDiskSpaceFieldNumber = 4;
  inline ::google::protobuf::int64 disk_space() const;
  inline void set_disk_space(::google::protobuf::int64 value);

  // optional int64 mem_space = 5 [default = 0];
  inline bool has_mem_space() const;
  inline void clear_mem_space();
  static const int kMemSpaceFieldNumber = 5;
  inline ::google::protobuf::int64 mem_space() const;
  inline void set_mem_space(::google::protobuf::int64 value);

  // optional int64 visit_flow = 6 [default = 0];
  inline bool has_visit_flow() const;
  inline void clear_visit_flow();
  static const int kVisitFlowFieldNumber = 6;
  inline ::google::protobuf::int64 visit_flow() const;
  inline void set_visit_flow(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:dist_storage.HBRequest)
 private:
  inline void set_has_host();
  inline void clear_has_host();
  inline void set_has_action();
  inline void clear_has_action();
  inline void set_has_updated_time();
  inline void clear_has_updated_time();
  inline void set_has_disk_space();
  inline void clear_has_disk_space();
  inline void set_has_mem_space();
  inline void clear_has_mem_space();
  inline void set_has_visit_flow();
  inline void clear_has_visit_flow();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* host_;
  ::google::protobuf::int64 updated_time_;
  ::google::protobuf::int64 disk_space_;
  ::google::protobuf::int64 mem_space_;
  ::google::protobuf::int64 visit_flow_;
  int action_;
  friend void  protobuf_AddDesc_name_5fserv_2eproto();
  friend void protobuf_AssignDesc_name_5fserv_2eproto();
  friend void protobuf_ShutdownFile_name_5fserv_2eproto();

  void InitAsDefaultInstance();
  static HBRequest* default_instance_;
};
// -------------------------------------------------------------------

class HBResponse : public ::google::protobuf::Message {
 public:
  HBResponse();
  virtual ~HBResponse();

  HBResponse(const HBResponse& from);

  inline HBResponse& operator=(const HBResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HBResponse& default_instance();

  void Swap(HBResponse* other);

  // implements Message ----------------------------------------------

  HBResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HBResponse& from);
  void MergeFrom(const HBResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .dist_storage.NSCode code = 1 [default = NS_SUC];
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 1;
  inline ::dist_storage::NSCode code() const;
  inline void set_code(::dist_storage::NSCode value);

  // @@protoc_insertion_point(class_scope:dist_storage.HBResponse)
 private:
  inline void set_has_code();
  inline void clear_has_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int code_;
  friend void  protobuf_AddDesc_name_5fserv_2eproto();
  friend void protobuf_AssignDesc_name_5fserv_2eproto();
  friend void protobuf_ShutdownFile_name_5fserv_2eproto();

  void InitAsDefaultInstance();
  static HBResponse* default_instance_;
};
// -------------------------------------------------------------------

class Bucket : public ::google::protobuf::Message {
 public:
  Bucket();
  virtual ~Bucket();

  Bucket(const Bucket& from);

  inline Bucket& operator=(const Bucket& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Bucket& default_instance();

  void Swap(Bucket* other);

  // implements Message ----------------------------------------------

  Bucket* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Bucket& from);
  void MergeFrom(const Bucket& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 number = 1;
  inline bool has_number() const;
  inline void clear_number();
  static const int kNumberFieldNumber = 1;
  inline ::google::protobuf::uint64 number() const;
  inline void set_number(::google::protobuf::uint64 value);

  // repeated string node_list = 2;
  inline int node_list_size() const;
  inline void clear_node_list();
  static const int kNodeListFieldNumber = 2;
  inline const ::std::string& node_list(int index) const;
  inline ::std::string* mutable_node_list(int index);
  inline void set_node_list(int index, const ::std::string& value);
  inline void set_node_list(int index, const char* value);
  inline void set_node_list(int index, const char* value, size_t size);
  inline ::std::string* add_node_list();
  inline void add_node_list(const ::std::string& value);
  inline void add_node_list(const char* value);
  inline void add_node_list(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& node_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_node_list();

  // @@protoc_insertion_point(class_scope:dist_storage.Bucket)
 private:
  inline void set_has_number();
  inline void clear_has_number();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 number_;
  ::google::protobuf::RepeatedPtrField< ::std::string> node_list_;
  friend void  protobuf_AddDesc_name_5fserv_2eproto();
  friend void protobuf_AssignDesc_name_5fserv_2eproto();
  friend void protobuf_ShutdownFile_name_5fserv_2eproto();

  void InitAsDefaultInstance();
  static Bucket* default_instance_;
};
// -------------------------------------------------------------------

class CNSRequest : public ::google::protobuf::Message {
 public:
  CNSRequest();
  virtual ~CNSRequest();

  CNSRequest(const CNSRequest& from);

  inline CNSRequest& operator=(const CNSRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CNSRequest& default_instance();

  void Swap(CNSRequest* other);

  // implements Message ----------------------------------------------

  CNSRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CNSRequest& from);
  void MergeFrom(const CNSRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string dist_alg = 1 [default = "ketama"];
  inline bool has_dist_alg() const;
  inline void clear_dist_alg();
  static const int kDistAlgFieldNumber = 1;
  inline const ::std::string& dist_alg() const;
  inline void set_dist_alg(const ::std::string& value);
  inline void set_dist_alg(const char* value);
  inline void set_dist_alg(const char* value, size_t size);
  inline ::std::string* mutable_dist_alg();
  inline ::std::string* release_dist_alg();
  inline void set_allocated_dist_alg(::std::string* dist_alg);

  // @@protoc_insertion_point(class_scope:dist_storage.CNSRequest)
 private:
  inline void set_has_dist_alg();
  inline void clear_has_dist_alg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  static ::std::string* _default_dist_alg_;
  ::std::string* dist_alg_;
  friend void  protobuf_AddDesc_name_5fserv_2eproto();
  friend void protobuf_AssignDesc_name_5fserv_2eproto();
  friend void protobuf_ShutdownFile_name_5fserv_2eproto();

  void InitAsDefaultInstance();
  static CNSRequest* default_instance_;
};
// -------------------------------------------------------------------

class CNSResponse : public ::google::protobuf::Message {
 public:
  CNSResponse();
  virtual ~CNSResponse();

  CNSResponse(const CNSResponse& from);

  inline CNSResponse& operator=(const CNSResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CNSResponse& default_instance();

  void Swap(CNSResponse* other);

  // implements Message ----------------------------------------------

  CNSResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CNSResponse& from);
  void MergeFrom(const CNSResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool ret_code = 1 [default = false];
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 1;
  inline bool ret_code() const;
  inline void set_ret_code(bool value);

  // repeated .dist_storage.Bucket bucket_list = 2;
  inline int bucket_list_size() const;
  inline void clear_bucket_list();
  static const int kBucketListFieldNumber = 2;
  inline const ::dist_storage::Bucket& bucket_list(int index) const;
  inline ::dist_storage::Bucket* mutable_bucket_list(int index);
  inline ::dist_storage::Bucket* add_bucket_list();
  inline const ::google::protobuf::RepeatedPtrField< ::dist_storage::Bucket >&
      bucket_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::dist_storage::Bucket >*
      mutable_bucket_list();

  // @@protoc_insertion_point(class_scope:dist_storage.CNSResponse)
 private:
  inline void set_has_ret_code();
  inline void clear_has_ret_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::dist_storage::Bucket > bucket_list_;
  bool ret_code_;
  friend void  protobuf_AddDesc_name_5fserv_2eproto();
  friend void protobuf_AssignDesc_name_5fserv_2eproto();
  friend void protobuf_ShutdownFile_name_5fserv_2eproto();

  void InitAsDefaultInstance();
  static CNSResponse* default_instance_;
};
// ===================================================================

class NameService_Stub;

class NameService : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline NameService() {};
 public:
  virtual ~NameService();

  typedef NameService_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void HeartBeat(::google::protobuf::RpcController* controller,
                       const ::dist_storage::HBRequest* request,
                       ::dist_storage::HBResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void GetBuketList(::google::protobuf::RpcController* controller,
                       const ::dist_storage::CNSRequest* request,
                       ::dist_storage::CNSResponse* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(NameService);
};

class NameService_Stub : public NameService {
 public:
  NameService_Stub(::google::protobuf::RpcChannel* channel);
  NameService_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~NameService_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements NameService ------------------------------------------

  void HeartBeat(::google::protobuf::RpcController* controller,
                       const ::dist_storage::HBRequest* request,
                       ::dist_storage::HBResponse* response,
                       ::google::protobuf::Closure* done);
  void GetBuketList(::google::protobuf::RpcController* controller,
                       const ::dist_storage::CNSRequest* request,
                       ::dist_storage::CNSResponse* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(NameService_Stub);
};


// ===================================================================


// ===================================================================

// HBRequest

// optional string host = 1 [default = ""];
inline bool HBRequest::has_host() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HBRequest::set_has_host() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HBRequest::clear_has_host() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HBRequest::clear_host() {
  if (host_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    host_->clear();
  }
  clear_has_host();
}
inline const ::std::string& HBRequest::host() const {
  // @@protoc_insertion_point(field_get:dist_storage.HBRequest.host)
  return *host_;
}
inline void HBRequest::set_host(const ::std::string& value) {
  set_has_host();
  if (host_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    host_ = new ::std::string;
  }
  host_->assign(value);
  // @@protoc_insertion_point(field_set:dist_storage.HBRequest.host)
}
inline void HBRequest::set_host(const char* value) {
  set_has_host();
  if (host_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    host_ = new ::std::string;
  }
  host_->assign(value);
  // @@protoc_insertion_point(field_set_char:dist_storage.HBRequest.host)
}
inline void HBRequest::set_host(const char* value, size_t size) {
  set_has_host();
  if (host_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    host_ = new ::std::string;
  }
  host_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dist_storage.HBRequest.host)
}
inline ::std::string* HBRequest::mutable_host() {
  set_has_host();
  if (host_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    host_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:dist_storage.HBRequest.host)
  return host_;
}
inline ::std::string* HBRequest::release_host() {
  clear_has_host();
  if (host_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = host_;
    host_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HBRequest::set_allocated_host(::std::string* host) {
  if (host_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete host_;
  }
  if (host) {
    set_has_host();
    host_ = host;
  } else {
    clear_has_host();
    host_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:dist_storage.HBRequest.host)
}

// optional .dist_storage.NodeAction action = 2 [default = NUL];
inline bool HBRequest::has_action() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HBRequest::set_has_action() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HBRequest::clear_has_action() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HBRequest::clear_action() {
  action_ = 3;
  clear_has_action();
}
inline ::dist_storage::NodeAction HBRequest::action() const {
  // @@protoc_insertion_point(field_get:dist_storage.HBRequest.action)
  return static_cast< ::dist_storage::NodeAction >(action_);
}
inline void HBRequest::set_action(::dist_storage::NodeAction value) {
  assert(::dist_storage::NodeAction_IsValid(value));
  set_has_action();
  action_ = value;
  // @@protoc_insertion_point(field_set:dist_storage.HBRequest.action)
}

// optional int64 updated_time = 3 [default = 0];
inline bool HBRequest::has_updated_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HBRequest::set_has_updated_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HBRequest::clear_has_updated_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HBRequest::clear_updated_time() {
  updated_time_ = GOOGLE_LONGLONG(0);
  clear_has_updated_time();
}
inline ::google::protobuf::int64 HBRequest::updated_time() const {
  // @@protoc_insertion_point(field_get:dist_storage.HBRequest.updated_time)
  return updated_time_;
}
inline void HBRequest::set_updated_time(::google::protobuf::int64 value) {
  set_has_updated_time();
  updated_time_ = value;
  // @@protoc_insertion_point(field_set:dist_storage.HBRequest.updated_time)
}

// optional int64 disk_space = 4 [default = 0];
inline bool HBRequest::has_disk_space() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HBRequest::set_has_disk_space() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HBRequest::clear_has_disk_space() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HBRequest::clear_disk_space() {
  disk_space_ = GOOGLE_LONGLONG(0);
  clear_has_disk_space();
}
inline ::google::protobuf::int64 HBRequest::disk_space() const {
  // @@protoc_insertion_point(field_get:dist_storage.HBRequest.disk_space)
  return disk_space_;
}
inline void HBRequest::set_disk_space(::google::protobuf::int64 value) {
  set_has_disk_space();
  disk_space_ = value;
  // @@protoc_insertion_point(field_set:dist_storage.HBRequest.disk_space)
}

// optional int64 mem_space = 5 [default = 0];
inline bool HBRequest::has_mem_space() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void HBRequest::set_has_mem_space() {
  _has_bits_[0] |= 0x00000010u;
}
inline void HBRequest::clear_has_mem_space() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void HBRequest::clear_mem_space() {
  mem_space_ = GOOGLE_LONGLONG(0);
  clear_has_mem_space();
}
inline ::google::protobuf::int64 HBRequest::mem_space() const {
  // @@protoc_insertion_point(field_get:dist_storage.HBRequest.mem_space)
  return mem_space_;
}
inline void HBRequest::set_mem_space(::google::protobuf::int64 value) {
  set_has_mem_space();
  mem_space_ = value;
  // @@protoc_insertion_point(field_set:dist_storage.HBRequest.mem_space)
}

// optional int64 visit_flow = 6 [default = 0];
inline bool HBRequest::has_visit_flow() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void HBRequest::set_has_visit_flow() {
  _has_bits_[0] |= 0x00000020u;
}
inline void HBRequest::clear_has_visit_flow() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void HBRequest::clear_visit_flow() {
  visit_flow_ = GOOGLE_LONGLONG(0);
  clear_has_visit_flow();
}
inline ::google::protobuf::int64 HBRequest::visit_flow() const {
  // @@protoc_insertion_point(field_get:dist_storage.HBRequest.visit_flow)
  return visit_flow_;
}
inline void HBRequest::set_visit_flow(::google::protobuf::int64 value) {
  set_has_visit_flow();
  visit_flow_ = value;
  // @@protoc_insertion_point(field_set:dist_storage.HBRequest.visit_flow)
}

// -------------------------------------------------------------------

// HBResponse

// optional .dist_storage.NSCode code = 1 [default = NS_SUC];
inline bool HBResponse::has_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HBResponse::set_has_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HBResponse::clear_has_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HBResponse::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::dist_storage::NSCode HBResponse::code() const {
  // @@protoc_insertion_point(field_get:dist_storage.HBResponse.code)
  return static_cast< ::dist_storage::NSCode >(code_);
}
inline void HBResponse::set_code(::dist_storage::NSCode value) {
  assert(::dist_storage::NSCode_IsValid(value));
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:dist_storage.HBResponse.code)
}

// -------------------------------------------------------------------

// Bucket

// required uint64 number = 1;
inline bool Bucket::has_number() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Bucket::set_has_number() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Bucket::clear_has_number() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Bucket::clear_number() {
  number_ = GOOGLE_ULONGLONG(0);
  clear_has_number();
}
inline ::google::protobuf::uint64 Bucket::number() const {
  // @@protoc_insertion_point(field_get:dist_storage.Bucket.number)
  return number_;
}
inline void Bucket::set_number(::google::protobuf::uint64 value) {
  set_has_number();
  number_ = value;
  // @@protoc_insertion_point(field_set:dist_storage.Bucket.number)
}

// repeated string node_list = 2;
inline int Bucket::node_list_size() const {
  return node_list_.size();
}
inline void Bucket::clear_node_list() {
  node_list_.Clear();
}
inline const ::std::string& Bucket::node_list(int index) const {
  // @@protoc_insertion_point(field_get:dist_storage.Bucket.node_list)
  return node_list_.Get(index);
}
inline ::std::string* Bucket::mutable_node_list(int index) {
  // @@protoc_insertion_point(field_mutable:dist_storage.Bucket.node_list)
  return node_list_.Mutable(index);
}
inline void Bucket::set_node_list(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:dist_storage.Bucket.node_list)
  node_list_.Mutable(index)->assign(value);
}
inline void Bucket::set_node_list(int index, const char* value) {
  node_list_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:dist_storage.Bucket.node_list)
}
inline void Bucket::set_node_list(int index, const char* value, size_t size) {
  node_list_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dist_storage.Bucket.node_list)
}
inline ::std::string* Bucket::add_node_list() {
  return node_list_.Add();
}
inline void Bucket::add_node_list(const ::std::string& value) {
  node_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:dist_storage.Bucket.node_list)
}
inline void Bucket::add_node_list(const char* value) {
  node_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:dist_storage.Bucket.node_list)
}
inline void Bucket::add_node_list(const char* value, size_t size) {
  node_list_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:dist_storage.Bucket.node_list)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Bucket::node_list() const {
  // @@protoc_insertion_point(field_list:dist_storage.Bucket.node_list)
  return node_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Bucket::mutable_node_list() {
  // @@protoc_insertion_point(field_mutable_list:dist_storage.Bucket.node_list)
  return &node_list_;
}

// -------------------------------------------------------------------

// CNSRequest

// optional string dist_alg = 1 [default = "ketama"];
inline bool CNSRequest::has_dist_alg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CNSRequest::set_has_dist_alg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CNSRequest::clear_has_dist_alg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CNSRequest::clear_dist_alg() {
  if (dist_alg_ != _default_dist_alg_) {
    dist_alg_->assign(*_default_dist_alg_);
  }
  clear_has_dist_alg();
}
inline const ::std::string& CNSRequest::dist_alg() const {
  // @@protoc_insertion_point(field_get:dist_storage.CNSRequest.dist_alg)
  return *dist_alg_;
}
inline void CNSRequest::set_dist_alg(const ::std::string& value) {
  set_has_dist_alg();
  if (dist_alg_ == _default_dist_alg_) {
    dist_alg_ = new ::std::string;
  }
  dist_alg_->assign(value);
  // @@protoc_insertion_point(field_set:dist_storage.CNSRequest.dist_alg)
}
inline void CNSRequest::set_dist_alg(const char* value) {
  set_has_dist_alg();
  if (dist_alg_ == _default_dist_alg_) {
    dist_alg_ = new ::std::string;
  }
  dist_alg_->assign(value);
  // @@protoc_insertion_point(field_set_char:dist_storage.CNSRequest.dist_alg)
}
inline void CNSRequest::set_dist_alg(const char* value, size_t size) {
  set_has_dist_alg();
  if (dist_alg_ == _default_dist_alg_) {
    dist_alg_ = new ::std::string;
  }
  dist_alg_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dist_storage.CNSRequest.dist_alg)
}
inline ::std::string* CNSRequest::mutable_dist_alg() {
  set_has_dist_alg();
  if (dist_alg_ == _default_dist_alg_) {
    dist_alg_ = new ::std::string(*_default_dist_alg_);
  }
  // @@protoc_insertion_point(field_mutable:dist_storage.CNSRequest.dist_alg)
  return dist_alg_;
}
inline ::std::string* CNSRequest::release_dist_alg() {
  clear_has_dist_alg();
  if (dist_alg_ == _default_dist_alg_) {
    return NULL;
  } else {
    ::std::string* temp = dist_alg_;
    dist_alg_ = const_cast< ::std::string*>(_default_dist_alg_);
    return temp;
  }
}
inline void CNSRequest::set_allocated_dist_alg(::std::string* dist_alg) {
  if (dist_alg_ != _default_dist_alg_) {
    delete dist_alg_;
  }
  if (dist_alg) {
    set_has_dist_alg();
    dist_alg_ = dist_alg;
  } else {
    clear_has_dist_alg();
    dist_alg_ = const_cast< ::std::string*>(_default_dist_alg_);
  }
  // @@protoc_insertion_point(field_set_allocated:dist_storage.CNSRequest.dist_alg)
}

// -------------------------------------------------------------------

// CNSResponse

// optional bool ret_code = 1 [default = false];
inline bool CNSResponse::has_ret_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CNSResponse::set_has_ret_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CNSResponse::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CNSResponse::clear_ret_code() {
  ret_code_ = false;
  clear_has_ret_code();
}
inline bool CNSResponse::ret_code() const {
  // @@protoc_insertion_point(field_get:dist_storage.CNSResponse.ret_code)
  return ret_code_;
}
inline void CNSResponse::set_ret_code(bool value) {
  set_has_ret_code();
  ret_code_ = value;
  // @@protoc_insertion_point(field_set:dist_storage.CNSResponse.ret_code)
}

// repeated .dist_storage.Bucket bucket_list = 2;
inline int CNSResponse::bucket_list_size() const {
  return bucket_list_.size();
}
inline void CNSResponse::clear_bucket_list() {
  bucket_list_.Clear();
}
inline const ::dist_storage::Bucket& CNSResponse::bucket_list(int index) const {
  // @@protoc_insertion_point(field_get:dist_storage.CNSResponse.bucket_list)
  return bucket_list_.Get(index);
}
inline ::dist_storage::Bucket* CNSResponse::mutable_bucket_list(int index) {
  // @@protoc_insertion_point(field_mutable:dist_storage.CNSResponse.bucket_list)
  return bucket_list_.Mutable(index);
}
inline ::dist_storage::Bucket* CNSResponse::add_bucket_list() {
  // @@protoc_insertion_point(field_add:dist_storage.CNSResponse.bucket_list)
  return bucket_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dist_storage::Bucket >&
CNSResponse::bucket_list() const {
  // @@protoc_insertion_point(field_list:dist_storage.CNSResponse.bucket_list)
  return bucket_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::dist_storage::Bucket >*
CNSResponse::mutable_bucket_list() {
  // @@protoc_insertion_point(field_mutable_list:dist_storage.CNSResponse.bucket_list)
  return &bucket_list_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace dist_storage

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::dist_storage::NSCode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::dist_storage::NSCode>() {
  return ::dist_storage::NSCode_descriptor();
}
template <> struct is_proto_enum< ::dist_storage::NodeAction> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::dist_storage::NodeAction>() {
  return ::dist_storage::NodeAction_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_name_5fserv_2eproto__INCLUDED
